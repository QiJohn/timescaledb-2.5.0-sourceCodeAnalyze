    关系型数据库本身比较容易成为系统瓶颈，单机存储容量、连接数、处理能力都有限。当单表的数据量达到1000W或100G以后，由于查询维度较多，即使添加从库、优化索引，做很多操作
时性能仍下降严重。此时就要考虑对其进行切分了，切分的目的就在于减少数据库的负担，缩短查询时间。数据库分布式核心内容无非就是数据切分（Sharding），以及切分后对数据的定位、
整合。数据切分就是将数据分散存储到多个数据库中，使得单一数据库中的数据量变小，通过扩充主机的数量缓解单一数据库的性能问题，从而达到提升数据库操作性能的目的。
    数据切分根据其切分类型，可以分为两种方式：垂直（纵向）切分和水平（横向）切分
    垂直分库就是根据业务耦合性，将关联度低的不同表存储在不同的数据库。做法与大系统拆分为多个小系统类似，按业务分类进行独立划分。
    水平切分分为库内分表和分库分表，是根据表内数据内在的逻辑关系，将同一个表按不同的条件分散到多个数据库或多个表中，每个表中只包含一部分数据，从而使得单个表的数据量变小，
达到分布式的效果。



======示例：使用postgres-fdw插件实现分库功能
===主库：
    建立涉及的数据库：create database master with owner 用户名；
    建立主表：create table tbl_user (id int, info text, logdate date not null) PARTITION BY RANGE (logdate);
    建立外部数据库的server：
        CREATE SERVER s0   
        FOREIGN DATA WRAPPER postgres_fdw 
        OPTIONS (host '分库ip', port '监听端口号', dbname '分库名称');
        
    建立连接分库进行认证用的mapping：
        CREATE USER MAPPING FOR 用户名   
        SERVER s0 
        OPTIONS (user '用户名', password '密码');
        
    建立与分库关联的外部表：
        CREATE FOREIGN TABLE tbl_user_0 (id int not null, info text, logdate date not null) 
        SERVER s0 
        OPTIONS (schema_name 'public', table_name '分库表名');
    
    将外部表作为分区挂载到主表上：alter table tbl_user attach partition tbl_user_0 FOR VALUES FROM ('2020-01-01') TO ('2022-01-01');
    
    
===分库：首先对分库的pg_hba.conf、postgresql.conf文件进行配置
    建立涉及的数据库：create database shard with owner 用户名；
    建立主表：create table tbl_user (id int, info text, logdate date not null)；


===插入数据：
    向主库插入符合分库时间约束的数据都会通过主库的外部表被插入到分库中；直接插入到分库的数据，可以在主库上查看。


【参考链接】
https://www.cnblogs.com/butterfly100/p/9034281.html
http://bos.itdks.com/19d6c597667d4470952657b48d32f64b.pdf
https://developer.aliyun.com/article/4791
https://www.modb.pro/db/93969


